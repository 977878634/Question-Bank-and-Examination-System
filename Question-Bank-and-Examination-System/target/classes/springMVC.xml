<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/mvc"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd
	   http://www.springframework.org/schema/mvc
	   http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	
	<!--//开启基于注解的servlet-->
	<context:component-scan base-package="justdj.top">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	
	
	
	<!--下面这句话使用默认配置方案-->
	<!--<mvc:annotation-driven />-->
	
	<!--会自动注册RequestMappingHandlerMapping与RequestMappingHandlerAdapter两个Bean-->
	<mvc:annotation-driven >
		<mvc:message-converters register-defaults="true" >
			
			<!-- 去除返回字符串时的引号 -->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			
			
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter" >

				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>application/json</value>
					</list>
				</property>

			</bean>
		</mvc:message-converters>
		
	
	</mvc:annotation-driven>
	
	<!--使用默认的servlet响应静态文件-->
	<mvc:default-servlet-handler/>
	
	<!--视图解析器,不配置可能会造成jsp页面无法正常访问-->
	<bean id="viewResolver"
		  class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!--前缀-->
		<property name="prefix">
			<value>/WEB-INF/view/</value>
		</property>
		<!--后缀-->
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>
	
	 <!--静态资源映射-->
	<mvc:resources mapping="/static/css/**" location="/WEB-INF/static/css/"></mvc:resources>
	<mvc:resources mapping="/static/js/**" location="/WEB-INF/static/js/"></mvc:resources>
	<mvc:resources mapping="/static/img/**" location="/WEB-INF/static/img/"></mvc:resources>
	<mvc:resources mapping="/static/lib/**" location="/WEB-INF/static/lib/"></mvc:resources>
	
	<!--默认没有装配MultipartResolver,所以默认情况下 不能处理文件上传工作。如果想使用文件上传功能，必须在上下文中配置Multipartresolver-->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!--上传文件大小限制，默认10m-->
		<property name="maxUploadSize">
			<value>10485760</value>
		</property>
		<!--请求的编码格式，必须和jsp的pageEncoding属性一致，以便正确读取表单的内容，默认为ISO-8859-1-->
		<property name="defaultEncoding">
			<value>UTF-8</value>
		</property>
	</bean>
	
	
	<!--
	   1.配置lifecycleBeanPostProcessor，可以在Spring IOC容器中调用shiro的生命周期方法.
   -->
	<!--<bean class="org.apache.shiro.spring.LifecycleBeanPostProcessor" id="lifecycleBeanPostProcessor" />-->
	
	<!--
		2.启用Spring IOC容器Shiro注解，但必须配置了lifecycleBeanPostProcessor后才可以使用
	-->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor" />
	
	<!--
		3.开启Spring AOC Shiro注解支持
	-->
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>
	
	
	<!-- shiro为集成springMvc 拦截异常-->
	<bean
			class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 这里你可以根据需要定义N多个错误异常转发 -->
				<prop key="org.apache.shiro.authz.UnauthorizedException">redirect:/403</prop>
				<prop key="org.apache.shiro.authz.UnauthenticatedException">redirect:/403</prop>
				<prop key="java.lang.IllegalArgumentException">/error.jsp</prop>  <!-- 参数错误(bizError.jsp) -->
				<prop key="java.lang.Exception">/error.jsp</prop>  <!-- 其他错误为'未定义错误'(unknowError.jsp) -->
			</props>
		</property>
	</bean>
	
</beans>